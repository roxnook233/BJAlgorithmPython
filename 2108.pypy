# BJ 2108
def cRound(n):
    if n > 0: 
        return int(n) + 1 if n -int(n) >= 0.5 else int(n)
    else: 
        return int(n) - 1 if n -int(n) <= -0.5 else int(n)
N = int(input())
keys = []
dic = {} 
for _ in range(N):
    key = int(input())
    if key in dic:
        dic[key] += 1
    else: 
        keys.append(key)
        dic[key] = 1

dic = dict(sorted(dic.items()))
sum = 0
cnt = 0
mid = 0
lis = []
midBool = False
for val, n in dic.items():
    cnt += n
    sum += n * val
    if not midBool and (cnt >= cRound(N / 2) ):
        mid = val
        midBool = True
    if n == max(dic.values()): lis.append(val)
# print(sum // N) # -1 // 3 == -1 //는 floor 연산을 함
# print(sum / N)
print(cRound(sum / N))
print(mid)
print(lis[0]) if len(lis) == 1 else print(lis[1])
print(max(dic.keys()) - min(dic.keys()))
